{"version":3,"file":"static/js/808.2fc8089e.chunk.js","mappings":"sgBAMMA,EAAgBC,IAA4D,IAA3D,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,EAAO,SAAEC,EAAW,IAAcJ,EAAPK,E,2IAAKC,CAAAN,EAAAO,GACzE,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,kBAEhBC,EAAcC,EAAAA,UAAUC,UAAUJ,EAAWN,IAC5CW,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,GAajC,OACEC,IAAAA,cAACC,EAAAA,GAAaC,EAAA,GACRb,EAAK,CACTc,SAAkD,SAAxCC,IAAIV,EAAa,oBAAiCG,EAAO,EACnEV,QAASkB,WAEC,KADIlB,SAAkBA,MAjBfU,KACnBC,EAAQD,GACR,MAAMS,EAAQC,YAAY,KACxBT,EAAQD,IACFA,EAAO,IAAM,GACfW,cAAcF,GAETT,EAAO,KAEf,MASkBY,CAAarB,MAGtB,IAATS,EAAaZ,EAAW,GAAGY,M","sources":["../../src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { LoadingButton } from '@kne/button-group';\nimport { useFormContext, formUtils } from '@kne/react-form-antd';\nimport get from 'lodash/get';\nimport '@kne/button-group/dist/index.css';\n\nconst CaptchaSender = ({ children, target, onClick, duration = 60, ...props }) => {\n  const { formState } = useFormContext();\n\n  const targetField = formUtils.findField(formState, target);\n  const [time, setTime] = useState(0);\n  const setCountdown = time => {\n    setTime(time);\n    const timer = setInterval(() => {\n      setTime(time => {\n        if (time - 1 === 0) {\n          clearInterval(timer);\n        }\n        return time - 1;\n      });\n    }, 1000);\n  };\n\n  return (\n    <LoadingButton\n      {...props}\n      disabled={get(targetField, 'validate.status') !== 'PASS' || time > 0}\n      onClick={async () => {\n        const res = onClick && (await onClick());\n        res !== false && setCountdown(duration);\n      }}\n    >\n      {time === 0 ? children : `${time}s`}\n    </LoadingButton>\n  );\n};\n\nexport default CaptchaSender;\n"],"names":["CaptchaSender","_ref","children","target","onClick","duration","props","_objectWithoutPropertiesLoose","_excluded","formState","useFormContext","targetField","formUtils","findField","time","setTime","useState","React","LoadingButton","_extends","disabled","get","async","timer","setInterval","clearInterval","setCountdown"],"sourceRoot":""}